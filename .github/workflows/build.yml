on:
  push:
#    tags:
#      - 'v*'
jobs:
  package:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
#        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set Version
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: echo ::set-env name=VERSION::$(git rev-parse --short HEAD)
      - name: Get Wails dependencies
        run: sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev
        if: matrix.platform == 'ubuntu-latest'
      - name: Get Wails
        run: go get -u github.com/wailsapp/wails/cmd/wails
      - name: Build package macOS
        run: |
          export PATH=${PATH}:`go env GOPATH`/bin
          echo "building on ${{ matrix.platform }}"
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          export LOG_LEVEL=debug
          export GODEBUG=1
          wails build -p
          echo "converting .app into a .dmg"
          npm install -g appdmg
          appdmg dmg-spec.json magick-app.dmg
        if: matrix.platform == 'macos-latest'
      - name: Build package linux
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          echo "building on ${{ matrix.platform }}"
          echo ${{ env.GITHUB_REF }}
          echo ${{ env.GITHUB_HEAD_REF }}
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          export LOG_LEVEL=debug
          export GODEBUG=1
          wails build
          # wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          # chmod +x linuxdeploy*.AppImage
          # ls ./
          # ./linuxdeploy*.AppImage --appdir AppDir --executable ./build/magick-app --desktop-file=magick-app.AppImage.desktop --icon-file=appicon--512.png --output appimage
        if: matrix.platform == 'ubuntu-latest'
      - name: Build package windows
        run: |
          $GP = (go env GOPATH)
          $env:path = "$env:path;$GP\bin"
          echo "building on ${{ matrix.platform }}"
          New-Item -ItemType directory -Path "$HOME\.wails" -Force
          Copy-Item -Path "$PWD\wails.json" -Destination "$HOME\.wails\wails.json"
          choco install mingw
          wails build -p
        if: matrix.platform == 'windows-latest'
#      - name: upload artifact macOS
#        uses: actions/upload-artifact@v1
#        with:
#          name: magick-app-macOS
#          path: magick-app.dmg
#        if: matrix.platform == 'macos-latest'
#      - name: upload artifact linux
#        uses: actions/upload-artifact@v2-preview
#        with:
#          name: magick-app-linux
#          path: ./build/magick-app
#        if: matrix.platform == 'ubuntu-latest'
#      #      - name: upload artifact linux appimage
#      #        uses: actions/upload-artifact@v2-preview
#      #        with:
#      #          name: magick-app-linux-appimage
#      #          path: Optimus-${{ env.VERSION }}-x86_64.AppImage
#      #        if: matrix.platform == 'ubuntu-latest'
#      - name: upload artifact windows
#        uses: actions/upload-artifact@v1
#        with:
#          name: magick-app-windows
#          path: ./build/magick-app.exe
#        if: matrix.platform == 'windows-latest'
#
#  release:
#    runs-on: ubuntu-latest
#    needs: package
#    steps:
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: ${{ github.ref }}
#          draft: true
#          prerelease: true
#      - name: Download macOS package
#        uses: actions/download-artifact@v1
#        with:
#          name: magick-app-macOS
#      - name: Upload macOS package to release
#        id: upload-macOS-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./magick-app-macOS/magick-app.dmg
#          asset_name: optimus_${{ github.ref }}_macOS.dmg
#          asset_content_type: application/octet-stream
#      - name: Download linux package
#        uses: actions/download-artifact@v1
#        with:
#          name: magick-app-linux
#      - name: Upload Linux package to release
#        id: upload-linux-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./magick-app-linux/magick-app
#          asset_name: optimus_${{ github.ref }}_linux_x86_64
#          asset_content_type: application/octet-stream
#      - name: Download windows package
#        uses: actions/download-artifact@v1
#        with:
#          name: magick-app-windows
#      - name: Upload Windows package to release
#        id: upload-windows-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./magick-app-windows/magick-app.exe
#          asset_name: optimus_${{ github.ref }}_windows_x86_64.exe
#          asset_content_type: application/octet-stream
